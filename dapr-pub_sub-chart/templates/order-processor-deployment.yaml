apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: {{.Values.orderProcessor.name}}
  name: {{.Values.orderProcessor.name}}
spec:
  replicas: {{.Values.orderProcessor.replicaCount}}
  selector:
    matchLabels:
      app: {{.Values.orderProcessor.name}}
  strategy: {}
  template:
    metadata:
      annotations:
        dapr.io/enabled: "{{.Values.orderProcessor.dapr.enabled}}"
        dapr.io/app-id: "{{.Values.orderProcessor.dapr.appId}}"
        dapr.io/app-port: "{{.Values.orderProcessor.dapr.appPort}}"
      labels:
        app: {{.Values.orderProcessor.name}}
    spec:
      containers:
      - image: {{.Values.orderProcessor.image.repository}}
        name: api
        imagePullPolicy: {{.Values.orderProcessor.image.pullPolicy}}
        resources: {}
        ports:
          - containerPort: {{.Values.orderProcessor.service.port}} 
        # {{- if eq .Values.deploymentType "aks" }}
        # readinessProbe:
        #   tcpSocket:
        #     port: {{.Values.orderProcessor.service.port}}
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        # livenessProbe:
        #   tcpSocket:
        #     port: {{.Values.orderProcessor.service.port}}
        #   initialDelaySeconds: 15
        #   periodSeconds: 20
        # {{- end }}
        env:
        - name: PORT
          value: "{{.Values.checkout.service.port}}"
      {{- if eq .Values.deploymentType "rancher" }}
      imagePullSecrets:
        - name: {{.Values.orderProcessor.image.pullSecret}}
      {{- end }}

